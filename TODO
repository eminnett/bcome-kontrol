
A. Collapse views or selections from views into 1?

C. Orchestration

Need to be able to
1. Script with full estate (default config)
2. Script with partial estate (default config & a traversal)
3. Pass CONF= to the script we want to run

.bcomerc ?

Aims
- Write scripts that can interact with all machines within a view
- Ability to orchestrate across networks & web hosts, on static or dynamic instances
- Include a generator to generate an orchestration file: this would be an initialization file (so can code around it as part of a bigger framework if we want). Init file to include as minimum
  some comments on top as to how to run it, its namespace etc

* B_PIN represents the tree structure of a view

change “configs” to “views” - a view is a representation of a collection of networks, with exclusions and some cached and non-cached inventories

We need a mechanism to

* Target a view with a basic script
* Script is RUBY, and has access to the B_PIN
* We reference nodes by breamdcrumb namespace

e.g.

resource = B_PIN.get(“foo:bar”)
resource.run
resource.put

Where a resource may be either a collection, static or dynamic inventory, or an individual server

When we run a command, we get the command output returned, with which we can then programmatically “do stuff”

** Can we compile down to bash scripts, and then excuse those natively? ** Do we even need to?

Our orchestration will initiate connections to all machines (like interactive mode) at the start

so

bcome-orch “namespace” script_name

(B_PIN then represents the namespace)

B_PIN.open_connections
… do stuff …

(5) Drivers

Other platforms

digital ocean
rackspace
etc etc

