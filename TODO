
Backlog

v 1.0
=====

Code
----

backlog 
  interactive mode: needs to be unique list of machines
  Pin the version of IRB in the gemfile
  Allow hide views so that we can have "all" type views that are used as the basis for further subselects
  orchestration:  1. Call one internal orchestration class from another 2. Mechanism to setup some kind of workflow (involves error code handling)
  implement puppet_sync in full in our installation project. 
 
bugs
  bcome foo:bar:server ; ssh_driver - Takes AGES to return the driver. What is it doing?
  interactive mode bcome prod:interactive opening itself many times
  interactive mode connection bug
  deadlock bug on parallel processing
  bad design: w do not specify from the base namespace when keying into something, e.g. we ommit 'ewok' when defining our proxy server...
  delay to get to NameError: /Users/guillaume/workspace/webzakimbo/gems/dev/bcome-kontrol/lib/objects/modules/workspace_commands.rb:158:in `method_missing'  

  Broken pipe: Open bcome, with no network connection & wait: prod bastion server

  Guillaumes-MacBook-Pro:bcome-kontrol-installation guillaume$ bcome
  ewok > packet_write_wait: Connection to 54.227.24.184: Broken pipe
  packet_write_wait: Connection to 54.227.24.184: Broken pipe
  packet_write_wait: Connection to 54.227.24.184: Broken pipe
  packet_write_wait: Connection to 54.227.24.184: Broken pipe
  packet_write_wait: Connection to 54.227.24.184: Broken pipe



Documentation
-------------


work out what needs to be documented
lib/objects/nodes/inventory/base.rb  def machine_by_identifier(identifier)  document this as being a selector for orchestration (as well as the cloud matches thing)
orchestration (internal)
  - @node & @arguments are available
  - execute the above
  - call one orchestration class from another (passing it a context by keyed namespace)
  - the select accessors available at inventory & collection level (e.g. how do I fetch a machine?)
  - traversing between contexts... stress @node is where the command was available at, but doesn't mean you're restricted to that particular node
cloud matches
... and everything else!
document patters for setting up networks: flat inventory / collection of environments / collection of environments with sub-selects / different platforms with collections and everything else below


v.1.2
=====

Code
----
  A new kind of sub-select that unions two or more other inventories where SSH connection details must come from its the origin inventory
  Drivers for other platforms: digital ocean / azure / rackspace etc
