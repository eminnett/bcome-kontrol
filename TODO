
Backlog

v 1.0
=====

Code
----

backlog 
  Pin the version of IRB in the gemfile
  Allow hide views so that we can have "all" type views that are used as the basis for further subselects
  orchestration:  1. Call one internal orchestration class from another 2. Mechanism to setup some kind of workflow (involves error code handling)
  implement puppet_sync in full in our installation project. 
 
bugs
  interactive mode bug
  deadlock bug on parallel processing
  bad design: w do not specify from the base namespace when keying into something, e.g. we ommit 'ewok' when defining our proxy server...

Documentation
-------------


work out what needs to be documented
lib/objects/nodes/inventory/base.rb  def machine_by_identifier(identifier)  document this as being a selector for orchestration (as well as the cloud matches thing)
orchestration (internal)
  - @node & @arguments are available
  - execute the above
  - call one orchestration class from another (passing it a context by keyed namespace)
  - the select accessors available at inventory & collection level (e.g. how do I fetch a machine?)
  - traversing between contexts... stress @node is where the command was available at, but doesn't mean you're restricted to that particular node
cloud matches
... and everything else!
document patters for setting up networks: flat inventory / collection of environments / collection of environments with sub-selects / different platforms with collections and everything else below


v.1.2
=====

Code
----
  A new kind of sub-select that unions two or more other inventories where SSH connection details must come from its the origin inventory
  Drivers for other platforms: digital ocean / azure / rackspace etc
